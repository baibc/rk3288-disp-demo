#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <stdint.h>
#include <string.h>
#include <unistd.h>

#include <sys/ioctl.h>
#include <sys/types.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/time.h> 
#include <linux/fb.h>

struct position_cfg {
    __u32 hwc_position_x_cfg;
    __u32 hwc_position_y_cfg;
};
#define RK_FBIOPUT_MOUSE_POSITION   0x4627

long unsigned int cursorBuf[32*32] ={
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,4294967295UL,4294967295UL,4294967295UL,4294967295UL,0,0,4294967295UL,4294967295UL,4294967295UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4278190080UL,4294967295UL,4294967295UL,4278190080UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,4294967295UL,4294967295UL,4294967295UL,4294967295UL,4278190080UL,4278190080UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,4294967295UL,4294967295UL,4294967295UL,4294967295UL,4278190080UL,4278190080UL,4294967295UL,4294967295UL,4294967295UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,4294967295UL,4278190080UL,4278190080UL,4278190080UL,4294967295UL,4294967295UL,4278190080UL,4278190080UL,4278190080UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,4294967295UL,4294967295UL,4294967295UL,4294967295UL,0,0,4294967295UL,4294967295UL,4294967295UL,4294967295UL,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};



int main(int argc, char **argv)
{
		int fb_fd0 =0;
		fb_fd0 = open ("/dev/graphics/fb0", O_RDWR);
		if(!fb_fd0)
		{
				printf("Error: cannot open framebuffer device.\n");
				exit(1);
		}

		struct fb_var_screeninfo  vinfo0;
		if (ioctl(fb_fd0, FBIOGET_VSCREENINFO, &vinfo0)) /* get var screeninfo */
		{
				printf("Error: reading variable information.\n");
				exit(2);
		}

		/* ################################################################### */ //fb4
		int fbp4;
		int fb_fd4 =0;
		long screensize4 =0;
		unsigned int xpos4, ypos4;

		fb_fd4 = open ("/dev/graphics/fb4", O_RDWR);
		if(!fb_fd4)
		{
				printf("Error: cannot open framebuffer device.\n");
				exit(1);
		}

		struct fb_var_screeninfo  vinfo4;
		if (ioctl(fb_fd4, FBIOGET_VSCREENINFO, &vinfo4)) /* get var screeninfo */
		{
				printf("Error: reading variable information.\n");
				exit(2);
		}

		screensize4 = 32 * 32 * 4;
		fbp4 = (int)mmap(0, screensize4, PROT_READ | PROT_WRITE, MAP_SHARED, fb_fd4, 0);
		memset((void*)fbp4, 0, screensize4);
		memcpy((void*)fbp4, cursorBuf, screensize4);

		xpos4 =0; 
		ypos4 =0;
		vinfo4.nonstd = (xpos4<<8) | (ypos4<<20) | (5);
		vinfo4.activate = FB_ACTIVATE_FORCE;
		ioctl(fb_fd4, FBIOPUT_VSCREENINFO, &vinfo4);

		/* ################################################################# */ //main function
		int nihao =0;
		struct position_cfg rk_ps_cfg;
		for(nihao=0; nihao<1024; nihao=nihao+10)
		{
			if(nihao >= 1010)    nihao =0;

			rk_ps_cfg.hwc_position_x_cfg =nihao;
			rk_ps_cfg.hwc_position_y_cfg =nihao;

			ioctl(fb_fd4, RK_FBIOPUT_MOUSE_POSITION, &rk_ps_cfg);
			ioctl(fb_fd0, FBIOPUT_VSCREENINFO, &vinfo0);

			usleep(10000);
		}
		/* ----------------------------------------------------- */


		close (fb_fd0);
		close (fb_fd4);
		munmap ((void*)fbp4, screensize4);
		return 0;	
		/* ################################################################# */
}


